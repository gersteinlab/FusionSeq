# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# -----------------------------------------------------------------------------
# Common library
# -----------------------------------------------------------------------------



VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = geneFusions$(EXEEXT) \
	gfrAnnotationConsistencyFilter$(EXEEXT) \
	gfrLargeScaleHomologyFilter$(EXEEXT) \
	gfrSmallScaleHomologyFilter$(EXEEXT) \
	gfrAbnormalInsertSizeFilter$(EXEEXT) gfrAddInfo$(EXEEXT) \
	gfrProximityFilter$(EXEEXT) bpFilter$(EXEEXT) \
	bp2alignment$(EXEEXT) gfrPCRFilter$(EXEEXT) \
	gfrBlackListFilter$(EXEEXT) gfr2bpJunctions$(EXEEXT) \
	bowtie2bp$(EXEEXT) gfrConfidenceValues$(EXEEXT) \
	validateBpJunctions$(EXEEXT) \
	gfrExpressionConsistencyFilter$(EXEEXT) \
	gfrMitochondrialFilter$(EXEEXT) gfrRepeatMaskerFilter$(EXEEXT) \
	gfrCountPairTypes$(EXEEXT) gfrRibosomalFilter$(EXEEXT) \
	gfrSpliceJunctionFilter$(EXEEXT) gfrClassify$(EXEEXT) \
	gfrWhiteListFilter$(EXEEXT)
subdir = src
DIST_COMMON = $(include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_gd.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/root.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" \
	"$(DESTDIR)$(includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
libfusionseq_la_DEPENDENCIES =
am_libfusionseq_la_OBJECTS = bp.lo gfr.lo sqvCircos.lo sqvUtil.lo \
	sqvWeb.lo util.lo
libfusionseq_la_OBJECTS = $(am_libfusionseq_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
PROGRAMS = $(bin_PROGRAMS)
am_bowtie2bp_OBJECTS = bowtie2bp.$(OBJEXT)
bowtie2bp_OBJECTS = $(am_bowtie2bp_OBJECTS)
bowtie2bp_DEPENDENCIES = libfusionseq.la
am_bp2alignment_OBJECTS = bp2alignment.$(OBJEXT)
bp2alignment_OBJECTS = $(am_bp2alignment_OBJECTS)
bp2alignment_DEPENDENCIES = libfusionseq.la
am_bpFilter_OBJECTS = bpFilter-bpFilter.$(OBJEXT)
bpFilter_OBJECTS = $(am_bpFilter_OBJECTS)
bpFilter_DEPENDENCIES = libfusionseq.la
bpFilter_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(bpFilter_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_geneFusions_OBJECTS = geneFusions.$(OBJEXT)
geneFusions_OBJECTS = $(am_geneFusions_OBJECTS)
geneFusions_DEPENDENCIES = libfusionseq.la
am_gfr2bpJunctions_OBJECTS = gfr2bpJunctions.$(OBJEXT)
gfr2bpJunctions_OBJECTS = $(am_gfr2bpJunctions_OBJECTS)
gfr2bpJunctions_DEPENDENCIES = libfusionseq.la
am_gfrAbnormalInsertSizeFilter_OBJECTS =  \
	gfrAbnormalInsertSizeFilter.$(OBJEXT)
gfrAbnormalInsertSizeFilter_OBJECTS =  \
	$(am_gfrAbnormalInsertSizeFilter_OBJECTS)
gfrAbnormalInsertSizeFilter_DEPENDENCIES = libfusionseq.la
am_gfrAddInfo_OBJECTS = gfrAddInfo.$(OBJEXT)
gfrAddInfo_OBJECTS = $(am_gfrAddInfo_OBJECTS)
gfrAddInfo_DEPENDENCIES = libfusionseq.la
am_gfrAnnotationConsistencyFilter_OBJECTS =  \
	gfrAnnotationConsistencyFilter.$(OBJEXT)
gfrAnnotationConsistencyFilter_OBJECTS =  \
	$(am_gfrAnnotationConsistencyFilter_OBJECTS)
gfrAnnotationConsistencyFilter_DEPENDENCIES = libfusionseq.la
am_gfrBlackListFilter_OBJECTS = gfrBlackListFilter.$(OBJEXT)
gfrBlackListFilter_OBJECTS = $(am_gfrBlackListFilter_OBJECTS)
gfrBlackListFilter_DEPENDENCIES = libfusionseq.la
am_gfrClassify_OBJECTS = gfrClassify.$(OBJEXT)
gfrClassify_OBJECTS = $(am_gfrClassify_OBJECTS)
gfrClassify_DEPENDENCIES = libfusionseq.la
am_gfrConfidenceValues_OBJECTS = gfrConfidenceValues.$(OBJEXT)
gfrConfidenceValues_OBJECTS = $(am_gfrConfidenceValues_OBJECTS)
gfrConfidenceValues_DEPENDENCIES = libfusionseq.la
am_gfrCountPairTypes_OBJECTS = gfrCountPairTypes.$(OBJEXT)
gfrCountPairTypes_OBJECTS = $(am_gfrCountPairTypes_OBJECTS)
gfrCountPairTypes_DEPENDENCIES = libfusionseq.la
am_gfrExpressionConsistencyFilter_OBJECTS =  \
	gfrExpressionConsistencyFilter.$(OBJEXT)
gfrExpressionConsistencyFilter_OBJECTS =  \
	$(am_gfrExpressionConsistencyFilter_OBJECTS)
gfrExpressionConsistencyFilter_DEPENDENCIES = libfusionseq.la
am_gfrLargeScaleHomologyFilter_OBJECTS =  \
	gfrLargeScaleHomologyFilter.$(OBJEXT)
gfrLargeScaleHomologyFilter_OBJECTS =  \
	$(am_gfrLargeScaleHomologyFilter_OBJECTS)
gfrLargeScaleHomologyFilter_DEPENDENCIES = libfusionseq.la
am_gfrMitochondrialFilter_OBJECTS = gfrMitochondrialFilter.$(OBJEXT)
gfrMitochondrialFilter_OBJECTS = $(am_gfrMitochondrialFilter_OBJECTS)
gfrMitochondrialFilter_DEPENDENCIES = libfusionseq.la
am_gfrPCRFilter_OBJECTS = gfrPCRFilter.$(OBJEXT)
gfrPCRFilter_OBJECTS = $(am_gfrPCRFilter_OBJECTS)
gfrPCRFilter_DEPENDENCIES = libfusionseq.la
am_gfrProximityFilter_OBJECTS = gfrProximityFilter.$(OBJEXT)
gfrProximityFilter_OBJECTS = $(am_gfrProximityFilter_OBJECTS)
gfrProximityFilter_DEPENDENCIES = libfusionseq.la
am_gfrRepeatMaskerFilter_OBJECTS = gfrRepeatMaskerFilter.$(OBJEXT)
gfrRepeatMaskerFilter_OBJECTS = $(am_gfrRepeatMaskerFilter_OBJECTS)
gfrRepeatMaskerFilter_DEPENDENCIES = libfusionseq.la
am_gfrRibosomalFilter_OBJECTS = gfrRibosomalFilter.$(OBJEXT)
gfrRibosomalFilter_OBJECTS = $(am_gfrRibosomalFilter_OBJECTS)
gfrRibosomalFilter_DEPENDENCIES = libfusionseq.la
am_gfrSmallScaleHomologyFilter_OBJECTS =  \
	gfrSmallScaleHomologyFilter.$(OBJEXT)
gfrSmallScaleHomologyFilter_OBJECTS =  \
	$(am_gfrSmallScaleHomologyFilter_OBJECTS)
gfrSmallScaleHomologyFilter_DEPENDENCIES = libfusionseq.la
am_gfrSpliceJunctionFilter_OBJECTS =  \
	gfrSpliceJunctionFilter.$(OBJEXT)
gfrSpliceJunctionFilter_OBJECTS =  \
	$(am_gfrSpliceJunctionFilter_OBJECTS)
gfrSpliceJunctionFilter_DEPENDENCIES = libfusionseq.la
am_gfrWhiteListFilter_OBJECTS = gfrWhiteListFilter.$(OBJEXT)
gfrWhiteListFilter_OBJECTS = $(am_gfrWhiteListFilter_OBJECTS)
gfrWhiteListFilter_DEPENDENCIES = libfusionseq.la
am_validateBpJunctions_OBJECTS = validateBpJunctions.$(OBJEXT)
validateBpJunctions_OBJECTS = $(am_validateBpJunctions_OBJECTS)
validateBpJunctions_DEPENDENCIES = libfusionseq.la
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX   " $@;
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(libfusionseq_la_SOURCES) $(bowtie2bp_SOURCES) \
	$(bp2alignment_SOURCES) $(bpFilter_SOURCES) \
	$(geneFusions_SOURCES) $(gfr2bpJunctions_SOURCES) \
	$(gfrAbnormalInsertSizeFilter_SOURCES) $(gfrAddInfo_SOURCES) \
	$(gfrAnnotationConsistencyFilter_SOURCES) \
	$(gfrBlackListFilter_SOURCES) $(gfrClassify_SOURCES) \
	$(gfrConfidenceValues_SOURCES) $(gfrCountPairTypes_SOURCES) \
	$(gfrExpressionConsistencyFilter_SOURCES) \
	$(gfrLargeScaleHomologyFilter_SOURCES) \
	$(gfrMitochondrialFilter_SOURCES) $(gfrPCRFilter_SOURCES) \
	$(gfrProximityFilter_SOURCES) $(gfrRepeatMaskerFilter_SOURCES) \
	$(gfrRibosomalFilter_SOURCES) \
	$(gfrSmallScaleHomologyFilter_SOURCES) \
	$(gfrSpliceJunctionFilter_SOURCES) \
	$(gfrWhiteListFilter_SOURCES) $(validateBpJunctions_SOURCES)
DIST_SOURCES = $(libfusionseq_la_SOURCES) $(bowtie2bp_SOURCES) \
	$(bp2alignment_SOURCES) $(bpFilter_SOURCES) \
	$(geneFusions_SOURCES) $(gfr2bpJunctions_SOURCES) \
	$(gfrAbnormalInsertSizeFilter_SOURCES) $(gfrAddInfo_SOURCES) \
	$(gfrAnnotationConsistencyFilter_SOURCES) \
	$(gfrBlackListFilter_SOURCES) $(gfrClassify_SOURCES) \
	$(gfrConfidenceValues_SOURCES) $(gfrCountPairTypes_SOURCES) \
	$(gfrExpressionConsistencyFilter_SOURCES) \
	$(gfrLargeScaleHomologyFilter_SOURCES) \
	$(gfrMitochondrialFilter_SOURCES) $(gfrPCRFilter_SOURCES) \
	$(gfrProximityFilter_SOURCES) $(gfrRepeatMaskerFilter_SOURCES) \
	$(gfrRibosomalFilter_SOURCES) \
	$(gfrSmallScaleHomologyFilter_SOURCES) \
	$(gfrSpliceJunctionFilter_SOURCES) \
	$(gfrWhiteListFilter_SOURCES) $(validateBpJunctions_SOURCES)
HEADERS = $(include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GDLIB_CONFIG = @GDLIB_CONFIG@
GD_CFLAGS = @GD_CFLAGS@
GD_LDFLAGS = @GD_LDFLAGS@
GD_LIBS = @GD_LIBS@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
ROOTAUXCFLAGS = @ROOTAUXCFLAGS@
ROOTAUXLIBS = @ROOTAUXLIBS@
ROOTCFLAGS = @ROOTCFLAGS@
ROOTCINT = @ROOTCINT@
ROOTCONF = @ROOTCONF@
ROOTEXEC = @ROOTEXEC@
ROOTGLIBS = @ROOTGLIBS@
ROOTINCDIR = @ROOTINCDIR@
ROOTLIBDIR = @ROOTLIBDIR@
ROOTLIBS = @ROOTLIBS@
ROOTRPATH = @ROOTRPATH@
ROOTSOVERSION = @ROOTSOVERSION@
ROOTVERSION = @ROOTVERSION@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
lib_LTLIBRARIES = libfusionseq.la
libfusionseq_la_SOURCES = bp.c \
			  gfr.c \
			  sqvCircos.c \
			  sqvUtil.c \
			  sqvWeb.c \
			  util.c

libfusionseq_la_LIBADD = -lm -lbios
include_HEADERS = bp.h \
		  gfr.h \
		  sqvCircos.h \
		  sqvUtil.h \
		  sqvWeb.h \
		  util.h


# -----------------------------------------------------------------------------
# CORE: Finding candidate fusions
# -----------------------------------------------------------------------------
geneFusions_SOURCES = geneFusions.c
geneFusions_LDADD = libfusionseq.la -lbios -lmrf -lm
gfrExpressionConsistencyFilter_SOURCES = gfrExpressionConsistencyFilter.c
gfrExpressionConsistencyFilter_LDADD = libfusionseq.la -lbios -lm
gfrAnnotationConsistencyFilter_SOURCES = gfrAnnotationConsistencyFilter.c
gfrAnnotationConsistencyFilter_LDADD = libfusionseq.la -lbios -lm
gfrRibosomalFilter_SOURCES = gfrRibosomalFilter.c
gfrRibosomalFilter_LDADD = libfusionseq.la -lbios
gfrMitochondrialFilter_SOURCES = gfrMitochondrialFilter.c
gfrMitochondrialFilter_LDADD = libfusionseq.la -lbios
gfrLargeScaleHomologyFilter_SOURCES = gfrLargeScaleHomologyFilter.c
gfrLargeScaleHomologyFilter_LDADD = libfusionseq.la -lbios
gfrSmallScaleHomologyFilter_SOURCES = gfrSmallScaleHomologyFilter.c
gfrSmallScaleHomologyFilter_LDADD = libfusionseq.la -lbios
gfrAbnormalInsertSizeFilter_SOURCES = gfrAbnormalInsertSizeFilter.c
gfrAbnormalInsertSizeFilter_LDADD = libfusionseq.la -lbios
gfrPCRFilter_SOURCES = gfrPCRFilter.c
gfrPCRFilter_LDADD = libfusionseq.la -lbios
gfrBlackListFilter_SOURCES = gfrBlackListFilter.c
gfrBlackListFilter_LDADD = libfusionseq.la -lbios
gfrProximityFilter_SOURCES = gfrProximityFilter.c
gfrProximityFilter_LDADD = libfusionseq.la -lbios
gfrAddInfo_SOURCES = gfrAddInfo.c
gfrAddInfo_LDADD = libfusionseq.la -lbios
gfrConfidenceValues_SOURCES = gfrConfidenceValues.c
gfrConfidenceValues_LDADD = libfusionseq.la -lbios -lmrf
gfrRepeatMaskerFilter_SOURCES = gfrRepeatMaskerFilter.c
gfrRepeatMaskerFilter_LDADD = libfusionseq.la -lbios -lm
gfrCountPairTypes_SOURCES = gfrCountPairTypes.c
gfrCountPairTypes_LDADD = libfusionseq.la -lbios -lm
gfrSpliceJunctionFilter_SOURCES = gfrSpliceJunctionFilter.c
gfrSpliceJunctionFilter_LDADD = libfusionseq.la -lbios
gfrClassify_SOURCES = gfrClassify.c
gfrClassify_LDADD = libfusionseq.la -lbios -lm
gfrWhiteListFilter_SOURCES = gfrWhiteListFilter.c
gfrWhiteListFilter_LDADD = libfusionseq.la -lbios

# -----------------------------------------------------------------------------
# CORE: Identifying sequences of the junction
# -----------------------------------------------------------------------------
gfr2bpJunctions_SOURCES = gfr2bpJunctions.c
gfr2bpJunctions_LDADD = libfusionseq.la -lbios -lm
bowtie2bp_SOURCES = bowtie2bp.c
bowtie2bp_LDADD = libfusionseq.la -lbios
validateBpJunctions_SOURCES = validateBpJunctions.c
validateBpJunctions_LDADD = libfusionseq.la -lbios
bpFilter_SOURCES = bpFilter.cpp
bpFilter_CXXFLAGS = -D_REENTRANT -pthread -m64
bpFilter_LDADD = libfusionseq.la -lstdc++ -lbios -L@ROOTLIBDIR@ @ROOTGLIBS@  @ROOTLIBS@ -ldl
bp2alignment_SOURCES = bp2alignment.c
bp2alignment_LDADD = libfusionseq.la -lbios
all: all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libfusionseq.la: $(libfusionseq_la_OBJECTS) $(libfusionseq_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK) -rpath $(libdir) $(libfusionseq_la_OBJECTS) $(libfusionseq_la_LIBADD) $(LIBS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
bowtie2bp$(EXEEXT): $(bowtie2bp_OBJECTS) $(bowtie2bp_DEPENDENCIES) 
	@rm -f bowtie2bp$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bowtie2bp_OBJECTS) $(bowtie2bp_LDADD) $(LIBS)
bp2alignment$(EXEEXT): $(bp2alignment_OBJECTS) $(bp2alignment_DEPENDENCIES) 
	@rm -f bp2alignment$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bp2alignment_OBJECTS) $(bp2alignment_LDADD) $(LIBS)
bpFilter$(EXEEXT): $(bpFilter_OBJECTS) $(bpFilter_DEPENDENCIES) 
	@rm -f bpFilter$(EXEEXT)
	$(AM_V_CXXLD)$(bpFilter_LINK) $(bpFilter_OBJECTS) $(bpFilter_LDADD) $(LIBS)
geneFusions$(EXEEXT): $(geneFusions_OBJECTS) $(geneFusions_DEPENDENCIES) 
	@rm -f geneFusions$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(geneFusions_OBJECTS) $(geneFusions_LDADD) $(LIBS)
gfr2bpJunctions$(EXEEXT): $(gfr2bpJunctions_OBJECTS) $(gfr2bpJunctions_DEPENDENCIES) 
	@rm -f gfr2bpJunctions$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gfr2bpJunctions_OBJECTS) $(gfr2bpJunctions_LDADD) $(LIBS)
gfrAbnormalInsertSizeFilter$(EXEEXT): $(gfrAbnormalInsertSizeFilter_OBJECTS) $(gfrAbnormalInsertSizeFilter_DEPENDENCIES) 
	@rm -f gfrAbnormalInsertSizeFilter$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gfrAbnormalInsertSizeFilter_OBJECTS) $(gfrAbnormalInsertSizeFilter_LDADD) $(LIBS)
gfrAddInfo$(EXEEXT): $(gfrAddInfo_OBJECTS) $(gfrAddInfo_DEPENDENCIES) 
	@rm -f gfrAddInfo$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gfrAddInfo_OBJECTS) $(gfrAddInfo_LDADD) $(LIBS)
gfrAnnotationConsistencyFilter$(EXEEXT): $(gfrAnnotationConsistencyFilter_OBJECTS) $(gfrAnnotationConsistencyFilter_DEPENDENCIES) 
	@rm -f gfrAnnotationConsistencyFilter$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gfrAnnotationConsistencyFilter_OBJECTS) $(gfrAnnotationConsistencyFilter_LDADD) $(LIBS)
gfrBlackListFilter$(EXEEXT): $(gfrBlackListFilter_OBJECTS) $(gfrBlackListFilter_DEPENDENCIES) 
	@rm -f gfrBlackListFilter$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gfrBlackListFilter_OBJECTS) $(gfrBlackListFilter_LDADD) $(LIBS)
gfrClassify$(EXEEXT): $(gfrClassify_OBJECTS) $(gfrClassify_DEPENDENCIES) 
	@rm -f gfrClassify$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gfrClassify_OBJECTS) $(gfrClassify_LDADD) $(LIBS)
gfrConfidenceValues$(EXEEXT): $(gfrConfidenceValues_OBJECTS) $(gfrConfidenceValues_DEPENDENCIES) 
	@rm -f gfrConfidenceValues$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gfrConfidenceValues_OBJECTS) $(gfrConfidenceValues_LDADD) $(LIBS)
gfrCountPairTypes$(EXEEXT): $(gfrCountPairTypes_OBJECTS) $(gfrCountPairTypes_DEPENDENCIES) 
	@rm -f gfrCountPairTypes$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gfrCountPairTypes_OBJECTS) $(gfrCountPairTypes_LDADD) $(LIBS)
gfrExpressionConsistencyFilter$(EXEEXT): $(gfrExpressionConsistencyFilter_OBJECTS) $(gfrExpressionConsistencyFilter_DEPENDENCIES) 
	@rm -f gfrExpressionConsistencyFilter$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gfrExpressionConsistencyFilter_OBJECTS) $(gfrExpressionConsistencyFilter_LDADD) $(LIBS)
gfrLargeScaleHomologyFilter$(EXEEXT): $(gfrLargeScaleHomologyFilter_OBJECTS) $(gfrLargeScaleHomologyFilter_DEPENDENCIES) 
	@rm -f gfrLargeScaleHomologyFilter$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gfrLargeScaleHomologyFilter_OBJECTS) $(gfrLargeScaleHomologyFilter_LDADD) $(LIBS)
gfrMitochondrialFilter$(EXEEXT): $(gfrMitochondrialFilter_OBJECTS) $(gfrMitochondrialFilter_DEPENDENCIES) 
	@rm -f gfrMitochondrialFilter$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gfrMitochondrialFilter_OBJECTS) $(gfrMitochondrialFilter_LDADD) $(LIBS)
gfrPCRFilter$(EXEEXT): $(gfrPCRFilter_OBJECTS) $(gfrPCRFilter_DEPENDENCIES) 
	@rm -f gfrPCRFilter$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gfrPCRFilter_OBJECTS) $(gfrPCRFilter_LDADD) $(LIBS)
gfrProximityFilter$(EXEEXT): $(gfrProximityFilter_OBJECTS) $(gfrProximityFilter_DEPENDENCIES) 
	@rm -f gfrProximityFilter$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gfrProximityFilter_OBJECTS) $(gfrProximityFilter_LDADD) $(LIBS)
gfrRepeatMaskerFilter$(EXEEXT): $(gfrRepeatMaskerFilter_OBJECTS) $(gfrRepeatMaskerFilter_DEPENDENCIES) 
	@rm -f gfrRepeatMaskerFilter$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gfrRepeatMaskerFilter_OBJECTS) $(gfrRepeatMaskerFilter_LDADD) $(LIBS)
gfrRibosomalFilter$(EXEEXT): $(gfrRibosomalFilter_OBJECTS) $(gfrRibosomalFilter_DEPENDENCIES) 
	@rm -f gfrRibosomalFilter$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gfrRibosomalFilter_OBJECTS) $(gfrRibosomalFilter_LDADD) $(LIBS)
gfrSmallScaleHomologyFilter$(EXEEXT): $(gfrSmallScaleHomologyFilter_OBJECTS) $(gfrSmallScaleHomologyFilter_DEPENDENCIES) 
	@rm -f gfrSmallScaleHomologyFilter$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gfrSmallScaleHomologyFilter_OBJECTS) $(gfrSmallScaleHomologyFilter_LDADD) $(LIBS)
gfrSpliceJunctionFilter$(EXEEXT): $(gfrSpliceJunctionFilter_OBJECTS) $(gfrSpliceJunctionFilter_DEPENDENCIES) 
	@rm -f gfrSpliceJunctionFilter$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gfrSpliceJunctionFilter_OBJECTS) $(gfrSpliceJunctionFilter_LDADD) $(LIBS)
gfrWhiteListFilter$(EXEEXT): $(gfrWhiteListFilter_OBJECTS) $(gfrWhiteListFilter_DEPENDENCIES) 
	@rm -f gfrWhiteListFilter$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(gfrWhiteListFilter_OBJECTS) $(gfrWhiteListFilter_LDADD) $(LIBS)
validateBpJunctions$(EXEEXT): $(validateBpJunctions_OBJECTS) $(validateBpJunctions_DEPENDENCIES) 
	@rm -f validateBpJunctions$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(validateBpJunctions_OBJECTS) $(validateBpJunctions_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bowtie2bp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bp2alignment.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bpFilter-bpFilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/geneFusions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gfr.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gfr2bpJunctions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gfrAbnormalInsertSizeFilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gfrAddInfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gfrAnnotationConsistencyFilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gfrBlackListFilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gfrClassify.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gfrConfidenceValues.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gfrCountPairTypes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gfrExpressionConsistencyFilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gfrLargeScaleHomologyFilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gfrMitochondrialFilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gfrPCRFilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gfrProximityFilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gfrRepeatMaskerFilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gfrRibosomalFilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gfrSmallScaleHomologyFilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gfrSpliceJunctionFilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gfrWhiteListFilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sqvCircos.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sqvUtil.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sqvWeb.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/util.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/validateBpJunctions.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@am__fastdepCC_FALSE@	$(AM_V_CC) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

.cpp.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

bpFilter-bpFilter.o: bpFilter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bpFilter_CXXFLAGS) $(CXXFLAGS) -MT bpFilter-bpFilter.o -MD -MP -MF $(DEPDIR)/bpFilter-bpFilter.Tpo -c -o bpFilter-bpFilter.o `test -f 'bpFilter.cpp' || echo '$(srcdir)/'`bpFilter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bpFilter-bpFilter.Tpo $(DEPDIR)/bpFilter-bpFilter.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bpFilter.cpp' object='bpFilter-bpFilter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bpFilter_CXXFLAGS) $(CXXFLAGS) -c -o bpFilter-bpFilter.o `test -f 'bpFilter.cpp' || echo '$(srcdir)/'`bpFilter.cpp

bpFilter-bpFilter.obj: bpFilter.cpp
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bpFilter_CXXFLAGS) $(CXXFLAGS) -MT bpFilter-bpFilter.obj -MD -MP -MF $(DEPDIR)/bpFilter-bpFilter.Tpo -c -o bpFilter-bpFilter.obj `if test -f 'bpFilter.cpp'; then $(CYGPATH_W) 'bpFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/bpFilter.cpp'; fi`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/bpFilter-bpFilter.Tpo $(DEPDIR)/bpFilter-bpFilter.Po
@am__fastdepCXX_FALSE@	$(AM_V_CXX) @AM_BACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='bpFilter.cpp' object='bpFilter-bpFilter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bpFilter_CXXFLAGS) $(CXXFLAGS) -c -o bpFilter-bpFilter.obj `if test -f 'bpFilter.cpp'; then $(CYGPATH_W) 'bpFilter.cpp'; else $(CYGPATH_W) '$(srcdir)/bpFilter.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(includedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(includedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(HEADERS)
install-binPROGRAMS: install-libLTLIBRARIES

installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-libLTLIBRARIES

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLTLIBRARIES clean-libtool ctags \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-includeHEADERS install-info install-info-am \
	install-libLTLIBRARIES install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-includeHEADERS uninstall-libLTLIBRARIES


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
